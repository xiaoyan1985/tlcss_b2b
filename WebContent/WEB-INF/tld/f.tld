<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
  version="2.0">

  <description>JSTL 1.1 functions library</description>
  <display-name>JSTL functions</display-name>
  <tlib-version>1.1</tlib-version>
  <short-name>f</short-name>

  <function>
    <description>
      HTML をエスケープします。JSTL の out タグの代わりに使用します。 EL
      式で出力された文字列はエスケープされないため、エスケープを行いたい場合はこの function を使用します。
    </description>
    <name>out</name>
    <function-class>
      jp.co.tokaigroup.si.fw.tags.Functions
    </function-class>
    <function-signature>
      java.lang.String out( java.lang.Object )
    </function-signature>
    <example>${f:out(user.name)}さんこんにちは</example>
  </function>

  <function>
    <description>
      Escapes characters that could be interpreted as URL.
    </description>
    <name>u</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String u(java.lang.String)</function-signature>
    <example>
      ${f:u(param:info)}
    </example>
  </function>

  <function>
    <description>
      Formats characters that could be interpreted as Date.
    </description>
    <name>date</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.util.Date date(java.lang.String, java.lang.String)</function-signature>
    <example>
      &lt;fmt:formatDate value="${f:date(date, 'yyyyMMdd')}" pattern="yyyy/MM/dd"/&gt;
    </example>
  </function>

  <function>
    <description>
      Formats characters that could be interpreted as Number.
    </description>
    <name>number</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.Number number(java.lang.String, java.lang.String)</function-signature>
    <example>
      &lt;fmt:formatNumber value="${f:number(number, '####')}" pattern="#,###"/&gt;
    </example>
  </function>

  <function>
    <description>
      Converts line break to br tag.
    </description>
    <name>br</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String br(java.lang.String)</function-signature>
    <example>
      ${f:br(f:h(textarea))}
    </example>
  </function>

  <function>
    <description>
      Converts line break to br tag.
    </description>
    <name>currentDate</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String currentDate(java.lang.String)</function-signature>
    <example>
      ${f:currentDate('yyyyMMdd')}
    </example>
  </function>

  <function>
    <description>
      Formats characters that could be interpreted as Date.
    </description>
    <name>toString</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String toString(java.util.Date, java.lang.String)</function-signature>
    <example>
      ${f:toString(date, 'yyyyMMdd')}
    </example>
  </function>

  <function>
    <description>配列やコレクションに指定したオブジェクトが含まれるかどうかを判定します。</description>
    <name>contains</name>
    <function-class>
      jp.co.tokaigroup.si.fw.tags.Functions
    </function-class>
    <function-signature>
      java.lang.Boolean contains( java.lang.Object, java.lang.Object )
    </function-signature>
    <example>
      &lt;c:if test="${f:contains(idlist, '1001')}"&gt; ...
      &lt;/c:if&gt;
    </example>
  </function>

  <function>
    <description>Map に指定したキーが含まれるかどうかを判定します。</description>
    <name>containsKey</name>
    <function-class>
      jp.co.tokaigroup.si.fw.tags.Functions
    </function-class>
    <function-signature>
      java.lang.Boolean containsKey( java.util.Map, java.lang.Object )
    </function-signature>
    <example>
      &lt;c:if test="${f:containsKey(idmap, '1001')}"&gt; ...
      &lt;/c:if&gt;
    </example>
  </function>

  <function>
    <description>Map に指定した値が含まれるかどうかを判定します。</description>
    <name>containsValue</name>
    <function-class>
      jp.co.tokaigroup.si.fw.tags.Functions
    </function-class>
    <function-signature>
      java.lang.Boolean containsValue( java.util.Map, java.lang.Object )
    </function-signature>
    <example>
      &lt;c:if test="${f:containsValue(idmap, '値1')}"&gt; ...
      &lt;/c:if&gt;
    </example>
  </function>

  <function>
    <description>
      指定したカンマ区切りの文字列をインデックス値でサイクルして出力します。
      主に行毎に色分けする場合にCSSのクラス名を出力する場合に使用します。
      下記の例では、status.indexを2で割って余りが0の場合「odd」、1の場合「even」が出力されます。
    </description>
    <name>odd</name>
    <function-class>
      jp.co.tokaigroup.si.fw.tags.Functions
    </function-class>
    <function-signature>
      java.lang.String odd( java.lang.Integer, java.lang.String )
    </function-signature>
    <example>
      &lt;c:forEach var="todo" items="${action.todoList}"
      varStatus="status"&gt; &lt;tr class="${f:odd(status.index,
      'odd,even')}"&gt; ... &lt;/tr&gt; &lt;/c:forEach&gt;
    </example>
  </function>

  <function>
    <description>
      Date 型のオブジェクトをフォーマットして出力します。JSTL の dateFormat タグの代わりに使用します。
    </description>
    <name>dateFormat</name>
    <function-class>
      jp.co.tokaigroup.si.fw.tags.Functions
    </function-class>
    <function-signature>
      java.lang.String dateFormat( java.lang.Object, java.lang.String )
    </function-signature>
    <example>${f:dateFormat(todo.limitDate, "yyyy-MM-dd")}</example>
  </function>

  <function>
    <description>
      第1引数の条件が true のときは第2引数を属性の値として出力し、第1引数の条件が false のときは属性自体を出力しません。
      条件によって disabled や checked などの属性の出力する・しないを制御したい場合に使用します。
      出力する・しないの制御はカスタムタグで行うので、t:input/t:select/t:textarea と組み合わせて使用してください。
    </description>
    <name>ifrender</name>
    <function-class>
      jp.co.tokaigroup.si.fw.tags.Functions
    </function-class>
    <function-signature>
      java.lang.Object ifrender ( java.lang.Boolean, java.lang.Object )
    </function-signature>
  </function>

  <function>
    <description>
      フラグを○×にフォーマットして出力します。
    </description>
    <name>flagFormat</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String flagFormat( java.lang.String )</function-signature>
    <example>
      ${f:flagFormat(flag)}
    </example>
  </function>

  <function>
    <description>
      Number型のオブジェクトをカンマ区切りにフォーマットして出力します。
    </description>
    <name>commaFormat</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String commaFormat( java.lang.Number )</function-signature>
    <example>
      ${f:commaFormat(number)}
    </example>
  </function>

  <function>
    <description>
      Number型のオブジェクトをパーセント用フォーマットにして出力します。
    </description>
    <name>percentFormat</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String percentFormat( java.lang.Number )</function-signature>
    <example>
      ${f:percentFormat(number)}
    </example>
  </function>

  <function>
    <description>
      Number型のオブジェクトを任意のフォーマットにして出力します。
    </description>
    <name>numberFormat</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String numberFormat( java.lang.Number , java.lang.String)</function-signature>
    <example>
      ${f:numberFormat(number, format)}
    </example>
  </function>

  <function>
    <description>
      Number型のオブジェクトを少数にフォーマットにして出力します。
    </description>
    <name>decimalFormat</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String decimalFormat( java.lang.Number)</function-signature>
    <example>
      ${f:decimalFormat(number)}
    </example>
  </function>

  <function>
    <description>
      郵便番号7桁を〒XXX-XXXXにフォーマットして出力します。
    </description>
    <name>formatYubinNo</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String formatYubinNo( java.lang.String )</function-signature>
    <example>
      ${f:formatYubinNo(yubinNo)}
    </example>
  </function>

  <function>
    <description>
      入力オブジェクトの全フィールドをhiddenタグに出力します。
    </description>
    <name>writeHidden</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String writeHiddenTag( java.lang.Object, java.lang.String )</function-signature>
    <example>
      ${f:writeHiddenTag(object, name)}
    </example>
  </function>

  <function>
    <description>
      入力オブジェクトの全フィールドをhiddenタグに出力します。
    </description>
    <name>writeHidden2</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String writeHiddenTag( java.lang.Object, java.lang.String, java.lang.String )</function-signature>
    <example>
      ${f:writeHiddenTag(object, name, excludeFieldName)}
    </example>
  </function>

  <function>
    <description>
      時間(hhmm)を時間(hh:mm)にフォーマットして出力します。
    </description>
    <name>formatTime</name>
    <function-class>jp.co.tokaigroup.si.fw.tags.Functions</function-class>
    <function-signature>java.lang.String formatTime( java.lang.String )</function-signature>
    <example>
      ${f:formatTime(jikan)}
    </example>
  </function>
</taglib>
